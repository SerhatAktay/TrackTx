# ============================================================
# TrackTx pipeline parameters
# How to run:
#   nextflow run main.nf -entry TrackTx -profile docker -with-report -with-timeline -with-dag
# Notes:
#   • This params.yaml file is automatically loaded by nextflow.config
#   • genome_cache caches fetched reference and indices (faster re-runs)
# ============================================================

experiment_name: "Testing_TrackTx"

# IO & layout
samplesheet: "samplesheet.csv"
sample_source: "fastq"         # "fastq" (local files) or "srr" (SRR accessions)
paired_end: false
output_dir: "./results"
control_label: "Control"       # Condition label used as siCPM baseline

# SRA download and FASTQ caching
fastq_gzip: false              # compress fetched SRR fastqs
sra_tmp: null                  # temp dir for fasterq-dump; null = work dir
sra_max_size: "200G"           # prefetch max size

# References
reference_genome: "hs1"        # hs1, hg38, mm10, dm6, TAIR10, other
genome_fasta: null             # required only if reference_genome == "other"
spikein_genome: "dm6"          # None, dm6, ERCC, other
spikein_fasta: null            # required only if spikein_genome == "other"

# Caches & assets
assets_dir: "./assets"
genome_cache: "./.cache/genomes"   # prefer a dedicated cache dir
force_rebuild: false               # rebuild Bowtie2 even if cached


# Trimming / preprocessing
adapter_trimming:
  enabled: true
  preset: "illumina"
  adapter1: "TGGAATTCTCGGGTGCCAAGG"
  adapter2: ""
  minlen: 12

# QC options for prepare_input
qc:
  tool: fastp          # fastp | fastqc | none
fastqc_raw: true        # run QC on raw inputs (respects qc.tool)

umi:
  enabled: true
  length: 7
  location: 5                # 5 or 3

barcode:
  enabled: true
  length: 7
  location: 3                # 5 or 3

# Normalization output knobs (used by 08_normalize_tracks.nf)
norm:
  emit_bw: true
  emit_sicpm: true
  emit_allmap: true
  emit_5p: null              # null = auto (emit only if 5′ inputs exist)

# Divergent transcription (06)
advanced:
  divergent_smooth_sd: 22
  divergent_threshold: 1
  divergent_signal_sum: 2
  divergent_bin_gap: 100
  divergent_merge_gap: 150
  divergent_nt_window: 1200
  divergent_balance: 0.0
  divergent_overlap_bp: 0
  divergent_valley_thr: 1e9
  divergent_max_width: 2000     # 0 to disable width bound
  divergent_qc: true
  divergent_gzip: false         # set true if you want .bed.gz as well

  prep_insert_minlen: 12        # (used by prepare_input if implemented)

functional_regions:
  prom_up: 250           # Promoter upstream extent (bp from TSS)
  prom_down: 250         # Promoter downstream extent (bp from TSS)
  div_inner: 250         # Divergent inner boundary (bp upstream of TSS)
  div_outer: 750         # Divergent outer boundary (bp upstream of TSS)
  tw_length: 10000       # Termination window length (bp after CPS)
  min_signal: 0.0        # Minimum signal threshold
  count_mode: "signal"   # "signal" (default) or "event"
  allow_unstranded: true # Allow unstranded divergent transcription features

# Optional debug toggles the pipeline already understands
debug: false
debug_report: false
help: false

