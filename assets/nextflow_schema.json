{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/serhataktay/tracktx-nf/assets/nextflow_schema.json",
  "title": "TrackTx – Nascent RNA processing and functional-region discovery",
  "type": "object",
  "properties": {
    "experiment_name": { "type": "string", "description": "Free-text label for this run." },

    "output_dir": { "type": "string", "default": "results", "description": "Top-level output directory." },
    "outdir":     { "type": "string", "description": "(Alias of output_dir). Prefer --output_dir.", "deprecated": true },

    "assets_dir":    { "type": "string",  "description": "Canonical artifact store for built indices (storeDir roots)." },
    "genome_cache":  { "type": "string",  "default": ".cache/genomes", "description": "Scratch/cache for FASTA + bt2 shards." },
    "force_rebuild": { "type": "boolean", "default": false, "description": "Force rebuild of Bowtie2 indices." },

    "samplesheet": {
      "type": "string",
      "description": "CSV samplesheet. Columns: sample, file1[,file2], treatment, timepoint, replicate.",
      "pattern": ".+\\.(csv|CSV)$",
      "examples": ["samplesheet.csv"]
    },

    "sample_source": {
      "type": "string",
      "enum": ["fastq", "srr", "local"],
      "default": "fastq",
      "description": "'fastq'/'local' = file paths in samplesheet; 'srr' = SRR accessions in file1/file2."
    },

    "fastq_gzip":  { "type": "boolean", "default": false, "description": "Compress fetched SRR FASTQs using pigz if available." },
    "sra_tmp":     { "type": ["string","null"], "default": null, "description": "Temporary directory for fasterq-dump (null = work dir)." },
    "sra_max_size":{ "type": "string",  "default": "200G", "description": "prefetch --max-size limit (e.g. '200G')." },

    "paired_end": { "type": "boolean", "default": false, "description": "If true, samplesheet must provide file2." },

    "reference_genome": {
      "type": "string",
      "enum": ["hs1", "hg38", "mm10", "dm6", "TAIR10", "other"],
      "default": "hs1",
      "description": "Primary assembly identifier or 'other' for custom FASTA/GTF."
    },
    "genome_fasta": { "type": "string", "description": "Used when reference_genome='other' (path to FASTA or FASTA.gz)." },

    "gtf_path": { "type": "string", "description": "Optional local GTF when reference_genome='other'." },
    "gtf_url":  { "type": "string", "description": "Optional remote GTF URL when reference_genome='other'." },

    "spikein_genome": {
      "type": "string",
      "enum": ["None", "dm6", "ERCC", "other"],
      "default": "None",
      "description": "Spike-in assembly or 'None'."
    },
    "spikein_fasta": { "type": "string", "description": "Used when spikein_genome='other' (path to FASTA or FASTA.gz)." },

    "control_label": { "type": "string", "default": "CTRL", "description": "Condition label used as siCPM baseline (replicate 1 preferred)." },

    "umi": {
      "type": "object",
      "properties": {
        "enabled":  { "type": "boolean", "default": false },
        "length":   { "type": "integer", "minimum": 1 },
        "location": { "type": "integer", "enum": [5, 3], "description": "5 => 5′ end, 3 => 3′ end" }
      },
      "additionalProperties": true
    },

    "barcode": {
      "type": "object",
      "properties": {
        "enabled":  { "type": "boolean", "default": false },
        "length":   { "type": "integer", "minimum": 1 },
        "location": { "type": "integer", "enum": [5, 3] }
      },
      "additionalProperties": true
    },

    "adapter_trimming": {
      "type": "object",
      "properties": {
        "enabled":  { "type": "boolean", "default": true },
        "preset":   { "type": "string", "enum": ["illumina", "nextera", "custom"], "default": "illumina" },
        "adapter1": { "type": "string", "description": "Used when preset='custom' or to override." }
      },
      "additionalProperties": true
    },

    "norm": {
      "type": "object",
      "description": "Normalization output controls for normalize_tracks.",
      "properties": {
        "emit_bw":     { "type": "boolean", "default": true,  "description": "Write BigWigs alongside bedGraphs." },
        "emit_sicpm":  { "type": "boolean", "default": true,  "description": "Write siCPM in addition to CPM (if factors resolvable)." },
        "emit_allmap": { "type": "boolean", "default": true,  "description": "Emit normalized allMap tracks." },
        "emit_5p":     { "type": ["boolean","null"], "default": null, "description": "Force 5′ outputs. Default null = auto (only if 5′ inputs exist)." }
      },
      "additionalProperties": true
    },

    "force_sort_bedgraph": {
      "type": "boolean",
      "default": false,
      "description": "Force sort bedGraphs prior to BigWig (workaround for UCSC sorter complaints)."
    },

    "qc": {
      "type": "object",
      "properties": {
        "mapq":          { "type": "integer", "default": 10 },
        "dedup":         { "type": "boolean", "default": true },
        "depth_max_cov": { "type": "integer", "default": 0 }
      },
      "additionalProperties": true
    },

    "pol2": {
      "type": "object",
      "properties": {
        "top_n":     { "type": "integer", "default": 100 },
        "plots":     { "type": "boolean", "default": true },
        "contrasts": { "type": "array", "items": { "type": "string" }, "default": [] }
      },
      "additionalProperties": true
    },

    "reports_plots": { "type": ["integer","boolean"], "default": 0, "description": "Enable extra plots in HTML reports." },
    "debug":         { "type": "boolean", "default": false },
    "debug_report":  { "type": "boolean", "default": false },

    "advanced": {
      "type": "object",
      "description": "Advanced/per-process tuning (safe defaults provided).",
      "properties": {
        "tracks_cpus": { "type": "integer", "minimum": 1, "default": 6 },
        "tracks_mem":  { "type": "string",  "default": "6 GB" },

        "index_cpus":  { "type": "integer", "minimum": 1, "default": 4 },
        "index_mem":   { "type": "string",  "default": "4 GB" },
        "index_time":  { "type": "string",  "default": "24h" },

        "divergent_threshold":  { "type": ["number","string"], "default": 1.0 },
        "divergent_balance":    { "type": ["number","string"], "default": 0.0 },
        "divergent_valley_thr": { "type": ["number","string"], "default": "Inf" },
        "divergent_nt_window":  { "type": ["integer","string"], "default": 800 },
        "divergent_smooth_sd":  { "type": ["number","string"], "default": 0 },
        "divergent_signal_sum": { "type": ["number","string"], "default": 5.0 },
        "divergent_bin_gap":    { "type": ["integer","string"], "default": 100 },
        "divergent_merge_gap":  { "type": ["integer","string"], "default": 50 },
        "divergent_overlap_bp": { "type": ["integer","string"], "default": 0 },
        "divergent_max_width":  { "type": ["integer","string"], "default": 0 },
        "divergent_qc":         { "type": "boolean", "default": false },
        "divergent_gzip":       { "type": "boolean", "default": false },
        "divergent_abs_neg":    { "type": "boolean", "default": false },
        "divergent_force_sort": { "type": "boolean", "default": false }
      },
      "additionalProperties": true
    },

    "functional_regions": {
      "type": "object",
      "description": "Genomic functional region discovery parameters (promoters, gene bodies, CPS, TW).",
      "properties": {
        "prom_up":         { "type": ["integer","string"], "default": 500,  "description": "Promoter upstream flank (bp)." },
        "prom_down":       { "type": ["integer","string"], "default": 250,  "description": "Promoter downstream flank (bp)." },
        "gb_start_offset": { "type": ["integer","string"], "default": 2000, "description": "Gene body start offset from TSS (bp)." },
        "cps_offset":      { "type": ["integer","string"], "default": 50,   "description": "CPS (cleavage/polyA site) offset (bp)." },
        "tw_length":       { "type": ["integer","string"], "default": 5000, "description": "Transcribed window length (bp)." },
        "merge_gap":       { "type": ["integer","string"], "default": 50,   "description": "Merge adjacent intervals within this gap (bp)." },
        "qc":              { "type": "boolean",            "default": false, "description": "Emit QC for functional region calls." },
        "debug":           { "type": "boolean",            "default": false, "description": "Enable extra debug outputs." },
        "keep_tmp":        { "type": "boolean",            "default": false, "description": "Keep temporary/intermediate files." },
        "debug_head":      { "type": ["integer","string"], "default": 0,    "description": "Limit number of debug rows (0 = all)." }
      },
      "additionalProperties": true
    },

    "conda_pol2": { "type": ["string","null"], "description": "Optional Conda spec override for Pol II modules." },

    "host_cpus": { "type": "integer", "minimum": 1, "description": "Override host CPU autodetect (used by sizing logic)." },
    "host_mem":  { "type": "integer", "minimum": 2, "description": "Override host RAM autodetect in GB." },

    "output": {
      "type": "object",
      "deprecated": true,
      "description": "Deprecated; use 'norm' + module defaults instead.",
      "properties": {
        "bedgraph":   { "type": "boolean" },
        "bigwig":     { "type": "boolean" },
        "cpm":        { "type": "boolean" },
        "crpmsi":     { "type": "boolean" },
        "raw_tracks": { "type": "boolean" }
      },
      "additionalProperties": true
    }
  },

  "required": ["samplesheet", "reference_genome", "output_dir"],

  "allOf": [
    {
      "if": { "properties": { "reference_genome": { "const": "other" } } },
      "then": { "required": ["genome_fasta"] }
    },
    {
      "if": { "properties": { "spikein_genome": { "const": "other" } } },
      "then": { "required": ["spikein_fasta"] }
    }
  ],

  "additionalProperties": true
}
