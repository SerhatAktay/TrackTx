// ════════════════════════════════════════════════════════════════════════════
/* SGE Configuration - Optimized for SGE/UGE-based HPC clusters */
// ════════════════════════════════════════════════════════════════════════════

// Include shared HPC settings
includeConfig 'conf/hpc.config'

process {
  executor = 'sge'
  
  // SGE-specific settings
  queue = "${params.sge_queue ?: 'all.q'}"
  clusterOptions = [
    '-N tracktx-{hash}',
    '-o logs/sge-%j.out',
    '-e logs/sge-%j.err',
    '-l h_rt={task.time}',
    '-l slots={task.cpus}',
    '-l h_vmem={task.memory}',
    '-V',  // Pass environment variables
    '-j y', // Merge stdout/stderr
    '-cwd', // Use current working directory
  ]
  
  // SGE resource mapping
  cpus   = { task.cpus }
  memory = { task.memory }
  time   = { task.time }
}

// SGE executor configuration
executor {
  name = 'sge'
  queueSize = 100
  submitRateLimit = '10/1min'
  
  // SGE-specific options
  queueStatCommand = 'qstat -u $USER'
  killCommand = 'qdel'
  
  // Job monitoring
  pollInterval = '30s'
  
  // Cleanup
  cleanup = true
}

// SGE-specific process overrides
process {
  // Override cluster options for specific processes if needed
  withName: /(?i).*fetch_and_build_index.*/ {
    clusterOptions = [
      '-N tracktx-index-{hash}',
      '-o logs/sge-%j.out',
      '-e logs/sge-%j.err',
      '-l h_rt=72:00:00',
      '-l slots=16',
      '-l h_vmem=64G',
      '-V',
      '-j y',
      '-cwd',
    ]
  }
  
  withName: /(?i).*run_alignment.*/ {
    clusterOptions = [
      '-N tracktx-align-{hash}',
      '-o logs/sge-%j.out',
      '-e logs/sge-%j.err',
      '-l h_rt=48:00:00',
      '-l slots=12',
      '-l h_vmem=48G',
      '-V',
      '-j y',
      '-cwd',
    ]
  }
}

// SGE environment setup
params {
  // SGE-specific paths
  sge_logs_dir = "${params.sge_logs_dir ?: 'logs'}"
  
  // Common SGE queues (customize for your cluster)
  sge_queue = "${params.sge_queue ?: 'all.q'}"
  
  // SGE resource limits
  max_jobs = "${params.max_jobs ?: 50}"
  max_slots_per_job = "${params.max_slots_per_job ?: 32}"
}

// Create logs directory if it doesn't exist
if (!new File(params.sge_logs_dir).exists()) {
  new File(params.sge_logs_dir).mkdirs()
}
