// ════════════════════════════════════════════════════════════════════════════
/* Server Configuration - Optimized for dedicated server deployments */
// ════════════════════════════════════════════════════════════════════════════

// Server-optimized settings for dedicated hardware
process {
  executor = 'local'
  
  // Server resource settings (adjust based on your server specs)
  cpus    = 8
  memory  = '32 GB'
  time    = '48h'
  
  // Server-friendly error handling
  errorStrategy = { task.exitStatus in [137,143] ? 'retry' : 'terminate' }
  maxRetries    = 2
  maxErrors     = 3
  
  // Use local storage efficiently
  scratch = true
  cleanup = true
  
  // Server-specific environment setup
  beforeScript = '''
    # Server-optimized environment
    export TMPDIR=${TMPDIR:-/tmp}
    mkdir -p "$TMPDIR"
    
    # Optimize for server hardware
    export OMP_NUM_THREADS=${task.cpus}
    export OPENBLAS_NUM_THREADS=${task.cpus}
    export MKL_NUM_THREADS=${task.cpus}
    
    # Tool-specific thread limits
    export BOWTIE2_THREADS=${task.cpus}
    export SAMTOOLS_THREADS=${task.cpus}
    
    # Memory optimization
    export JAVA_OPTS="-Xmx${task.memory.replaceAll('\\s+GB', '000m')}"
  '''
}

// Server-specific process overrides
process {
  // High-memory processes for server deployment
  withName: /(?i).*fetch_and_build_index.*/ {
    cpus   = 16
    memory = '64 GB'
    time   = '72h'
  }
  
  // CPU-intensive alignment
  withName: /(?i).*run_alignment.*/ {
    cpus   = 12
    memory = '48 GB'
    time   = '48h'
  }
  
  // Moderate resource processes
  withName: /(?i).*generate_tracks.*/ {
    cpus   = 8
    memory = '32 GB'
    time   = '24h'
  }
  
  withName: /(?i).*normalize_tracks.*/ {
    cpus   = 10
    memory = '32 GB'
    time   = '24h'
  }
  
  // Python-heavy processes
  withName: /(?i).*detect_divergent_tx.*/ {
    cpus   = 6
    memory = '24 GB'
    time   = '24h'
    maxForks = 2
  }
  
  // Lightweight processes
  withName: /(?i)(prepare_input|call_functional_regions|calculate_pol2_metrics|qc_pol2_tracktx|collect_counts).*/ {
    cpus   = 4
    memory = '16 GB'
    time   = '12h'
  }
  
  // Very lightweight processes
  withName: /(?i)(download_gtf|generate_reports|combine_reports|generate_readme).*/ {
    cpus   = 2
    memory = '8 GB'
    time   = '6h'
  }
}

// Server storage configuration
params {
  // Server-optimized paths
  work_dir = "${params.work_dir ?: '/var/tmp/nextflow-work'}"
  output_dir = "${params.output_dir ?: './results'}"
  
  // Server asset caching
  assets_dir = "${params.assets_dir ?: '/opt/tracktx/assets'}"
  genome_cache = "${params.genome_cache ?: '/opt/tracktx/genomes'}"
}

// Server execution settings
executor {
  // Server-optimized queue settings
  queueSize = 20  // Lower than HPC since it's a single server
  
  // No rate limiting needed for local execution
  submitRateLimit = null
  
  // Job monitoring
  pollInterval = '10s'
  
  // Cleanup on exit
  exitOnError = false
}

// Server-specific environment variables
env {
  // Server optimization flags
  NEXTFLOW_JVM_ARGS = '-Xmx8g -XX:+UseG1GC -XX:+UseStringDeduplication'
  
  // Tool-specific optimizations
  BOWTIE2_THREADS = '8'
  SAMTOOLS_THREADS = '8'
  
  // Memory management
  JAVA_OPTS = '-Xmx8g -XX:+UseG1GC'
}
